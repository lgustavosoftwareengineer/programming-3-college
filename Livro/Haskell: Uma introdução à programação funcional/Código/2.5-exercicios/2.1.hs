module Main where
    a :: [Integer]
    a = [11 ^ x | x <- [0 .. 6]]
    
    b :: [Integer]
    b = [x | x <- [1 .. 40], x `mod` 4 /= 0]

    --  c - ["AaBB", "AbBB", "AcBB", "AdBB", "AeBB", "AfBB", "AgBB"]
    c :: [[Char]]
    c = [  "A"++x++"BB" | x <- ["a", "b", "c", "d", "e", "f", "g"] ]
    
    -- d - [5,8,11,17,20,26,29,32,38,41]
    d :: [Integer]
    d = [3*x-1 | x <- [2..14], 3*x-1 /= 14 && 3*x-1 /= 23 && 3*x-1 /= 35] 

    -- e - [1.0,0.5,0.25,0.125,0.0625,0.03125]
    e :: [Float]
    e = [x/x^2 | x <- [1, 2, 4, 8, 16, 32]]

    -- f - [1,10,19,28,37,46,55,64]
    f :: [Integer]
    f = [x - 9 | x <- [10, 19, 28, 37, 46, 55, 64, 73]]

    -- g - [2,4,8,10,12,16,18,22,24,28,30]
    g :: [Integer]
    g = [2*x-2 | x <- [2..16], 2*x-2 /= 14 && 2*x-2 /= 20 && 2*x-2 /= 26]

    -- h -['@','A','C','D','E','G','J','L']
    h :: [Char]
    h = [x | x <- "@ACDEGJL"]

 

    main :: IO ()
    main = do
        print h